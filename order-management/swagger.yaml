swagger: '2.0'
info:
  version: 1.0.0
  title: Order Management
  description: The document describes resource APIs for Orders
host: localhost:8000
basePath: "/api"
tags:
- name: Orders
  description: API for orders
schemes:
- http
consumes:
- application/json
produces:
- application/json
paths:
  "/getOrders":
    get:
      tags:
      - Orders
      summary: Get Orders
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/Order"
        '404':
          description: No orders placed
  "/placeOrder":
    post:
      tags:
      - Order
      summary: Place Order
      parameters:
      - in: body
        name: body
        description: Add a new order
        required: true
        schema:
          $ref: '#/definitions/AddOrder'
      responses:
        '200':
          description: OK
        '400':
          description: Invalid ID supplied
        '404':
          description: Order not found
  "/getOrderByID/{id}":
    get:
      tags: 
      - Order
      summary: Find an Order by ID
      description: Returns a single order
      parameters:
      - name: id
        in: path
        description: ID of order to return
        required: true
        type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Order'
        '400':
          description: Invalid ID provided
        '404':
          description: Order not found
definitions:
  Order:
    type: object
    properties:
      _id:
        type: integer
        uniqueItems: true
        format: int64
      restaurantID:
        type: integer
        format: int64
      restaurantName:
        type: string
      orderTotalAmount:
        type: integer
        format: int32
      city:
        type: string
      orderStatus:
        type: string
        default: Ordered
      food:
        type: array
        items: 
          type: object
          properties:
            dishName:
              type: string
            quantity:
              type: number
            price:
              type: number
      createdOn:
        type: string
        format: date-time
  AddOrder: 
    type: object
    required:
    - restaurantName
    - food
    properties:
      restaurantName:
        type: string
      food:
        type: array
        items: 
          type: object
          properties:
            dishName:
              type: string
            quantity:
              type: number
